<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>pt.uminho.ceb.biosystems.merlin</groupId>
	<artifactId>merlin</artifactId>
	<version>3.7.1</version>
	<packaging>jar</packaging>

	<name>merlin-core</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy</maven.build.timestamp.format>
		<pt.uminho.ceb.biosystems.merlin.version>0.0.2-SNAPSHOT</pt.uminho.ceb.biosystems.merlin.version>
		<pt.uminho.ceb.biosystems.merlin.groupId>pt.uminho.ceb.biosystems.merlin</pt.uminho.ceb.biosystems.merlin.groupId>
		<build.name>beta</build.name>
	</properties>
	
	<repositories>
		<!-- <repository>
	      <id>biojava-maven-repo</id>
	      <name>BioJava repository</name>
	      <url>http://www.biojava.org/download/maven/</url>
	    </repository> -->
 	    <repository>
			<id>nexus</id>
			<name>Nexus BioSystems Server</name>
			<!-- <url>http://192.168.1.99/nexus/content/groups/public/</url> -->
			<url>http://193.137.11.210/nexus/content/groups/public/</url>
		</repository> 
  </repositories> 

<profiles>
	<profile>
		<id>merlin</id>
		<build>
		<!-- <directory>${project.basedir}/../../releases/merlin-win</directory> -->
		<directory>${project.basedir}/merlin</directory>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.3</version>
					<executions>
						<execution>
						    <id>build-win</id>
							<phase>package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<tasks>
									<taskdef resource="net/sf/antcontrib/antcontrib.properties"
										classpathref="maven.plugin.classpath" />

	<echo file="${project.build.directory}/merlin.bat" append="false">
		SET HOME=%~d0%~sp0
		wscript.exe %HOME%"utilities/invis.vbs" %HOME%"utilities/run.bat"%*
	</echo>
	
	<echo file="${project.build.directory}/utilities/invis.vbs" append="false">
		<![CDATA[ 
		set args = WScript.Arguments
		num = args.Count

		if num = 0 then
		    WScript.Echo "Usage: [CScript | WScript] invis.vbs aScript.bat <some script arguments>"
		    WScript.Quit 1
		end if

		sargs = ""
		if num > 1 then
		    sargs = " "
		    for k = 1 to num - 1
		    	anArg = args.Item(k)
		    	sargs = sargs & anArg & " "
		    next
		end if

		Set WshShell = WScript.CreateObject("WScript.Shell")

		WshShell.Run """" & WScript.Arguments(0) & """" & sargs, 0, False
		]]>
	</echo>	
	
	<echo file="${project.build.directory}/utilities/run.bat" append="false">
@echo off
REM ###############################################################################################
REM # 
REM # run.bat - merlin version ${project.version} for Win x86
REM # 
REM # CEB - Centre of Biological Engineering
REM # University of Minho
REM #
REM # Created inside the BioSystem Research Group (http://sysbio.uminho.pt)
REM # University of Minho
REM #
REM # Copyright (c) ${maven.build.timestamp}.
REM #
REM # http://www.merlin-sysbio.org
REM #
REM ###############################################################################################

SET APP_NAME="merlin - MEtabolic models Reconstruction using genome-scaLe INformation v${project.version}"

SET MERLIN_HOME=%~d0%~sp0../

REM cd %merlin_HOME%
SET %MERLIN_HOME%lib;path=%path%

REM SET path=%path%;%merlin_HOME%lib;%merlin_HOME%libwin32

SET CLASSPATH="./lib/*;"
SET JAR_ARGS=%MERLIN_HOME%"plugins_bin"

SET MAIN_CLASS="es.uvigo.ei.aibench.Launcher"

REM SET JAVA="%merlin_HOME%jre8\bin\java"
SET JAVA="java"

SET LPATH="-Djava.library.path=%merlin_HOME%lib";%merlin_HOME%
REM SET LAF="-Dswing.defaultlaf=com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel"
SET	LEGACY="-Djava.util.Arrays.useLegacyMergeSort=true"
SET LOCALE="-Duser.language=en"
SET CHARSET="-Dfile.encoding=utf-8"
SET MAXMEM="-Xmx1G"
SET MINMEM="-Xms512M"

SET COMMAND=%JAVA% %LAF% %LEGACY% %LPATH% %LOCALE% %CHARSET% %MAXMEM% %MINMEM% -cp %CLASSPATH% %MAIN_CLASS% %JAR_ARGS%

%COMMAND%
	</echo>

	<echo file="${project.build.directory}/run.sh" append="false">
	#!/bin/sh
	###############################################################################################
	#
	# run.sh - merlin version ${project.version} for Linux 64
	# 
	# CEB - Centre of Biological Engineering
	# University of Minho
	#
	# Created inside the BioSystem Research Group (http://sysbio.uminho.pt)
	# University of Minho
	#
	# http://www.merlin-sysbio.org
	#	
	# Copyright (c) ${maven.build.timestamp}.
	#
	###############################################################################################
	
	
	APP_NAME="merlin - MEtabolic models Reconstruction using genome-scaLe INformation ${project.version}"
	
	progdir=`dirname $0`
		cd $progdir
		echo "scriptpath = $PWD"
		
	merlin_HOME="`pwd`"
	
	CLASSPATH_UNIX="$PWD/lib/*:"
	
	export PATH=$PATH/":`pwd`/lib"
	export LD_LIBRARY_PATH="`pwd`/lib"
	
	JAR_ARGS_UNIX="plugins_bin"
	
	MAIN_CLASS="es.uvigo.ei.aibench.Launcher"
	
	# LAF="-Dswing.defaultlaf=com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel"
	LEGACY="-Djava.util.Arrays.useLegacyMergeSort=true"
	LOCALE="-Duser.language=en"
	CHARSET="-Dfile.encoding=utf-8"
	LPATH_UNIX="-Djava.library.path=`pwd`/lib"
	MAXMEM="-Xmx1G"
	MINMEM="-Xms512m"
	
	echo java ${LPATH_UNIX} ${MAXMEM} ${MINMEM} ${LAF} ${LEGACY} ${LOCALE} ${CHARSET} -cp ${CLASSPATH_UNIX} ${MAIN_CLASS} ${JAR_ARGS_UNIX}
	java ${LPATH_UNIX} ${MAXMEM} ${MINMEM} ${LAF} ${LEGACY} ${LOCALE} ${CHARSET} -cp ${CLASSPATH_UNIX} ${MAIN_CLASS} ${JAR_ARGS_UNIX}
	</echo>
	
	<echo file="${project.build.directory}/conf/database_settings.conf" append="false">
----------------------------
| merlin database settings |
----------------------------

dbtype: h2

**Default database type**
**Change line number 5 to either: (without asterisks)**
**dbtype: h2**
**dbtype: mysql**
**And set the credentials in the lines down bellow**


**mysql database credentials**

username: your_username
password: your_password
host: your_ip_address
port: 3306


**h2 database credentials**

h2_username: root
h2_password: password

	</echo>
		
		<chmod file="${project.build.directory}/run.sh" perm="a+x"/>
								</tasks>
							</configuration>
						</execution>
					</executions>
				</plugin>
				 <plugin>
					  <artifactId>maven-assembly-plugin</artifactId>
					  <version>2.2-beta-5</version>
					  <configuration>
					  	<finalName>${project.artifactId}-${project.version}-${build.name}</finalName>
  						<outputDirectory>${project.basedir}/../../releases</outputDirectory>
  						<appendAssemblyId>false</appendAssemblyId>
					    <descriptors>
					      <descriptor>zip.xml</descriptor>
					    </descriptors>
					  </configuration>
					  <executions>
					    <execution>
					      <id>make-assembly</id> <!--this is used for inheritance merges-->
					      <phase>package</phase> <!--append to the packaging phase.-->
					      <goals>
					        <goal>single</goal> <!--goals == mojos-->
					      </goals>
					    </execution>
					  </executions>
					</plugin>
			</plugins>
		</build>
	</profile>
</profiles>

	<build>
		<sourceDirectory>${basedir}/plugins_src</sourceDirectory>
		<scriptSourceDirectory>${basedir}/src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>${basedir}/test</testSourceDirectory>
		<outputDirectory>${basedir}/plugins_bin/merlin-core</outputDirectory>
		<!-- <testOutputDirectory>${basedir}/test_bin</testOutputDirectory> -->
		<resources>
	      <resource>
	        <directory>${basedir}/resources</directory>
	        <targetPath>${basedir}/plugins_bin</targetPath>
	      </resource>
	    </resources>
		<plugins>
		      <plugin>
		        <artifactId>maven-clean-plugin</artifactId>
		        <version>3.0.0</version>
 	 		    <executions>
		          <execution>
		            <id>auto-clean</id>
		            <phase>pre-clean</phase>
		            <goals>
		              <goal>clean</goal>
		            </goals>
		          </execution>
		        </executions>
		        <configuration>
			      <filesets>
			        <fileset>
			          <directory>${project.build.directory}</directory>
			          <includes>
			            <include>*.*</include>
			          </includes>
			          <excludes>
			          </excludes>
			        </fileset>
			      </filesets>
			    </configuration>
		      </plugin> 
   			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
					<executions>
					<execution>
						<id>copy-resources-conf</id>
						<!-- here the phase you need -->
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/conf</outputDirectory>
							<resources>
								<resource>
									<directory>conf</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-utilities</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/utilities</outputDirectory>
							<resources>
								<resource>
									<directory>utilities</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution> 
					<id>copy-resources-aibench</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.build.directory}/plugins_bin</outputDirectory>
						<resources>
							<resource>
								<directory>plugins_bin</directory>
								<filtering>false</filtering>
								<includes>
								  <include>*.jar</include>
								</includes>
							</resource>
						</resources>
					</configuration>
					</execution>
				</executions>
			</plugin>
			
				<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<testSource>false</testSource>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<outputDirectory>${project.build.directory}/plugins_bin</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>process-resources</phase>
					</execution>
				</executions>
			</plugin>
				
 			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<configuration>
						<outputDirectory>${project.build.directory}/plugins_bin</outputDirectory>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
				            <phase>verify</phase>
				            <goals>
				              <goal>jar-no-fork</goal>
				            </goals>
						</execution>
					</executions>
				</plugin>
				
	    <!-- <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-javadoc-plugin</artifactId>
			  <executions>
			    <execution>
			      <id>attach-javadocs</id>
			      <goals>
			        <goal>jar</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin> -->
			     
				<plugin>
				   <artifactId>maven-antrun-plugin</artifactId>
				       <version>1.3</version>
				    <executions>
				       <execution>
				            <phase>package</phase>
				            <goals>
				              <goal>run</goal>
				            </goals>
				            <configuration>
				              <tasks>
				                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
				                  classpathref="maven.plugin.classpath" />
					<echo file="${project.build.directory}/LICENSE.txt" append="false">
Copyright ${maven.build.timestamp}
CEB - Centre of Biological Engineering

University of Minho
 
This is free software: you can redistribute it and/or modify 
it under the terms of the GNU Public License as published by 
the Free Software Foundation, either version 3 of the License, or 
(at your option) any later version. 
 
This code is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
GNU Public License for more details. 

You should have received a copy of the GNU Public License 
along with this code. If not, see http://www.gnu.org/licenses/ 

Created inside the BioSystems Research Group (http://sysbio.uminho.pt)

http://www.merlin-sysbio.org
</echo>
<echo file="${project.build.directory}/conf/workbench.conf" append="false">
# Workbench configuration file
${project.build.directory}

#
#merlin-version: ${project.version}
#

#
# Main Window Title
#
mainwindow.title=merlin - v${project.version}

#
# Clipboard Icon
#
mainwindow.toptreeimage=conf/clipboard_header.png
	
#
# Status Bar visibility
#
mainwindow.statusbar.visible=true

#
# Menu Bar visibility
#
mainwindow.menubar.visible=true

##
## WORKBENCH CORE COMPONENTS. These are the default GUI components. You can hide or move them if you want
##

#
# Document Viewer. Allways show the default viewer, regardless there is a specific viewer also defined. Default is false
#
documentviewer.allways_show_default_view=false

#
# Default View. Use a table to display arrays and collections instead of the toString text area
#
defaultview.use_table_for_collections_and_arrays=false

#
# Session Tree visibility
#
sessiontree.visible=false

#
# Session Tree slot in the layouting system. Please see also /conf/template.xml
#
sessiontree.slot=left

#
# Clipboard Tree visibility
#
clipboardtree.visible=true

#
# Session Tree slot in the layouting system. Please see also /conf/template.xml
#
clipboardtree.slot=left

#
# Clipboard Tree organizes datatypes instances by their class
#
clipboardtree.organizebyclass=false

#
# Tree null treatment. In Explicit-datatypes and with Structure=COMPLEX, should subitems should be displayed or not in trees?.
# Default is true
#
#trees.shownulls=false

#
# Log Area visibility
#
logarea.visible=true
#
# Log Area max chars
# Default: -1 (no limit, caution)
#
logarea.maxsize=10000

#
# Log Area slot in the layouting system. Please see also /conf/template.xml
#
logarea.slot=bottom

#
# Memory Monitor visibility
#
memorymonitor.visible=true

#
# Memory Monitor slot in the layouting system. Please see also /conf/template.xml
#
memorymonitor.slot=bottom

#
# ToolBar visibility
#
toolbar.visible=true

#
# ToolBar names visibility
#
toolbar.showOperationNames=true

#
# ToolBar initial position
# position values are NORTH | SOUTH | EAST | WEST
#
toolbar.position=NORTH

#
# ToolBar separators
#
# Define where the separators are shown
# they will be placed after the operation that appears in that relative order in the toolbar
# Separated by commas (,)
#
#toolbar.separators=1,2,3

#
# Operations visibility. By default, all operations are displayed everywhere (main menu, popup menu and dialogs). But if
# you want to change this behaviour, use this option.
# 
# The current available options are (you can put more than one, separated with spaces)
#  MENU - the operation can be accessed from the main menu
#  POPUP - the operation can be accessed from the popup menu showed in the trees
#  DIALOG - the operation can be accessed from dialogs 
#  TOOLBAR - the operation can be accessed from the toolbar
# your_operation_uid.visibility= POPUP DIALOG MENU TOOLBAR


#Menu position overriding
#All plugins can choose an arbitrary position of their operations in menus. If you want to choose them
#you can override this default position
#example:
#menu.file=1
#menu.file.export=2
					</echo>
	              </tasks>
	            </configuration>
	          </execution>
		        	</executions>
		        	<dependencies>
			          	<dependency>
				            <groupId>ant-contrib</groupId>
				            <artifactId>ant-contrib</artifactId>
				            <version>20020829</version>
			          	</dependency>
		        	</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/lib</outputDirectory>
								<overWriteReleases>true</overWriteReleases>
								<overWriteSnapshots>true</overWriteSnapshots>
								<overWriteIfNewer>true</overWriteIfNewer>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				 <plugin>
			        <artifactId>maven-install-plugin</artifactId>
			        <version>2.5.2</version>
			        <executions>
			          <execution>
			            <id>default-install</id>
			            <phase>install</phase>
			            <goals>
			              <goal>install</goal>
			            </goals>
			            <configuration>
					      <skip>true</skip>
					    </configuration>
			          </execution>
			        </executions>
			      </plugin>
				
				<plugin>
			        <groupId>org.apache.maven.plugins</groupId>
			        <artifactId>maven-surefire-plugin</artifactId>
			        <version>2.17</version>
			        <configuration>
			          <skipTests>true</skipTests>
			        </configuration>
			     </plugin>
			     
			 <!--    <plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.6</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>biosystems-snapshots</serverId>
						<nexusUrl>http://193.137.11.210/nexus/</nexusUrl>
					</configuration>
				</plugin> -->
	
		</plugins>
	</build>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>3.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jtattoo/JTattoo -->
		<dependency>
		    <groupId>com.jtattoo</groupId>
		    <artifactId>JTattoo</artifactId>
		    <version>1.6.11</version>
		</dependency>
	
		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
		   	<groupId>log4j</groupId>
		   	<artifactId>log4j</artifactId>
		   	<version>1.2.17</version>
		</dependency>
		
		<dependency>
		    <groupId>org.biojava</groupId>
		    <artifactId>blast</artifactId>
		    <version>1.9.2</version>
		</dependency>
		<dependency>
			<groupId>${pt.uminho.ceb.biosystems.merlin.groupId}</groupId>
			<artifactId>merlin-gpr</artifactId>
			<version>${pt.uminho.ceb.biosystems.merlin.version}</version>
		</dependency>
		<dependency>
			<groupId>${pt.uminho.ceb.biosystems.merlin.groupId}</groupId>
				<artifactId>merlin-utilities</artifactId>
			<version>${pt.uminho.ceb.biosystems.merlin.version}</version>
		</dependency>
		<dependency>
			<groupId>${pt.uminho.ceb.biosystems.merlin.groupId}</groupId>
			<artifactId>triage-core</artifactId>
			<version>${pt.uminho.ceb.biosystems.merlin.version}</version>
		</dependency>
		<dependency>
			<groupId>${pt.uminho.ceb.biosystems.merlin.groupId}</groupId>
			<artifactId>merlin-biomass</artifactId>
			<version>${pt.uminho.ceb.biosystems.merlin.version}</version>
		</dependency>
		
		<!-- <dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.3</version>
		</dependency> -->
		
		<dependency>
			<groupId>ant-contrib</groupId>
			<artifactId>ant-contrib</artifactId>
			<version>20020829</version>
		</dependency>
		
		<dependency>
		    <groupId>commons-validator</groupId>
		    <artifactId>commons-validator</artifactId>
		    <version>1.6</version>
		</dependency>
		
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>20041228.180559</version>
		</dependency>
		
		<dependency>
			<groupId>org.java.net.substance</groupId>
			<artifactId>substance</artifactId>
			<version>6.0</version>
		</dependency>

		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
			<version>1.6.1</version>
		</dependency>
		
		<dependency>
			<groupId>net.beeger</groupId>
			<artifactId>squareness</artifactId>
			<version>1.0</version>
		</dependency>
		
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		
		<dependency>
			<groupId>com.sun.woodstock.dependlibs</groupId>
			<artifactId>jhall</artifactId>
			<version>2.0</version>
		</dependency>
		
		<dependency>
			<groupId>es.uvigo.ei.aibench</groupId>
			<artifactId>aibench-optflux</artifactId>
			<version>1.1.0</version>
			<!-- If this jar is present in launcher/lib uncomment the next lines to 
				run OptFlux -->
			<scope>system</scope>
			<systemPath>${basedir}/lib/aibench-optflux-1.1.0.jar</systemPath>
		</dependency>
		
		<dependency>
		  <groupId>es.uvigo.ei.aibench</groupId>
		  <artifactId>core-optflux</artifactId>
		  <version>1.1.0</version>
		</dependency>
		
		<dependency>
		  <groupId>es.uvigo.ei.aibench</groupId>
		  <artifactId>pluginmanager-optflux</artifactId>
		  <version>1.1.0</version>
		</dependency>
 		
		<dependency>
			  <groupId>es.uvigo.ei.aibench</groupId>
			  <artifactId>workbench-optflux</artifactId>
			  <version>1.1.1</version>
		</dependency>
		
		<dependency>
			<groupId>com.univocity</groupId>
			<artifactId>univocity-parsers</artifactId>
			<version>2.5.5</version>
			<type>jar</type>
		</dependency>
		
	</dependencies>
	
	<distributionManagement>
		<snapshotRepository>
			<id>biosystems-snapshots</id>
			<url>http://193.137.11.210/nexus/content/repositories/biosystems-snapshots</url>
		</snapshotRepository>
		<repository>
			<id>biosystems-releases</id>
			<url>http://193.137.11.210/nexus/content/repositories/biosystems-releases</url>
		</repository>
	</distributionManagement>
 
</project>
